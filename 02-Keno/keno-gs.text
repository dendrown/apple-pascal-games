(*
 * KENO
 * Welcome to the Keno lounge.
 *)
PROGRAM Keno(INPUT, OUTPUT);
USES AppleStuff, TurtleGraphics;

CONST
  MINMATCHES    = 5;            (* Minimum spot matches for a win *)
  NUMPLAYSPOTS  = 8;            (* Player gets 8 spots *)
  NUMCOMPSPOTS  = 20;           (* Computer picks 20 spots *)
  TOTALSPOTS    = 80;           (* Total of 80 possible spots *)

  COST          = 1.20;         (* Cost to play a game *)
  PAYOFF5       = 10;           (* For 5 spots player gets $10 *)
  PAYOFF6       = 100;          (* For 5 spots player gets $100 *)
  PAYOFF7       = 2200;         (* For 5 spots player gets $2200 *)
  PAYOFF8       = 25000;        (* For 5 spots player gets $25000 *)

  GRIDCELL      = 17;           (* Pixel width/height of a grid cell *)
  GRIDXLEFT     = 30;           (* x-coordinate of left side of grid *)
  GRIDYBOTTOM   = 10;           (* x-coordinate of right side of grid *)
  TEXTLINE      = 8;            (* Text line height in pixels *)

  CHARNORMAL    = 10;           (* Standard white characters on black screen *)
  CHARREVERSE   = 5;            (* Reversed black characters on white background *)
  CHARXOR       = 6;            (* Toggle black/white characters *)

TYPE
  SpotType   = SET of 1..TOTALSPOTS;
  StatusLine = 1..5;
  HighLight  = (HLPLAYER, HLCOMPUTER, HLMATCH);

VAR
  Ch        : Char;             (* Input to see if user wishes to continue *)
  CompSpots : SpotType;         (* Spots the computer chooses *)
  PlaySpots : SpotType;         (* Player's spots *)
  Matches   : 0..NUMPLAYSPOTS;  (* Player matched computer this many times *)
  Money     : Real;             (* Player has this much money *)
  PayOffs   : Array [MINMATCHES..NUMPLAYSPOTS] of Real;


(*
 * PrepDrawXY
 * Outputs a string in graphics mode
 *)
PROCEDURE PrepDrawXY(X, Y : Integer);
BEGIN
  PenColor(NONE);
  MoveTo(X, Y);
  PenColor(WHITE)
END; (* PrepDrawXY *)


(*
 * INITGRID
 * Sets up grid to represent the spread of spots
 *)
PROCEDURE InitGrid;
VAR
    X, Y      : Integer;
    GridRight : Integer;
    GridTop   : Integer;

BEGIN
  FillScreen(BLACK);
  GridRight := GRIDXLEFT + 10*GRIDCELL;
  GridTop   := GRIDYBOTTOM + 8*GRIDCELL;

  (* Horizontal Lines *)
  Y := GRIDYBOTTOM;
  Repeat
    PrepDraw(GRIDXLEFT, Y);
    MoveTo(GridRight, Y);
    Y := Y + GRIDCELL
  Until Y >= GridTop+1;

  (* Vertical Lines *)
  X := GRIDXLEFT;
  Repeat
    PrepDraw(X, GRIDYBOTTOM);
    MoveTo(X, GridTop);
    X := X + GRIDCELL
  Until X >= GridRight+1
END; (* InitGrid *)


(*
 * INITIALIZE
 * Sets up game and finances
 *)
PROCEDURE Initialize;
BEGIN
  Ch := 'Y';
  Money := 0.00;
  PayOffs[5] := PAYOFF5;    PayOffs[6] := PAYOFF6;
  PayOffs[7] := PAYOFF5;    PayOffs[8] := PAYOFF8;

  Randomize;
  InitTurtle
END; (* Initialize *)


(*
 * WriteXY
 * Outputs a string in graphics mode
 *)
PROCEDURE WriteXY(X, Y : Integer; TxtMsg : String);
BEGIN
  PrepDrawXY(X, Y);
  WString(TxtMsg)
END; (* WriteXY *)


(*
 * Status
 * Outputs a string in the status area (top of screen)
 *)
PROCEDURE Status(LineNum : StatusLine; TxtMsg : String);
VAR
  Y : Integer;

BEGIN
  Y := 192 - (LineNum * TEXTLINE);
  WriteXY(0, Y, '                                        ');
  WriteXY(0, Y, TxtMsg)
END; (* Status *)


(*
 * WriteNumXY
 * Outputs a one or two digit number in graphics mode
 *)
PROCEDURE WriteGridNum(Num : Integer;
                       Effect : HighLight);
VAR
    X, Y   : Integer;
    Placer : Integer;
    Ones   : Integer;
    NumTxt : String;

BEGIN
  (* Determine where the number ([1..80] goes on the grid
   *  X: slide the digit from the orgin (left) towards the right
   *  Y: move up from orgin (bottom), flipping rows from 70s upwards towards 0s
   *)
  Placer := Num - 1;                (* Convert num 1..10 to placement 0..9 *)
  Ones := Placer MOD 10;            (* Lower digit in placement *)
  X := Ones * GRIDCELL + GRIDXLEFT;
  Y := ((Placer + 70 - (2 * (Placer - Ones))) DIV 10) * GRIDCELL + GRIDYBOTTOM;

  ViewPort(X, X+GRIDCELL, Y, Y+GRIDCELL);

  (* Highlight values to indicate player spots and winning matches *)
  If Effect = HLPLAYER Then
  Begin
    CharType(CHARREVERSE);
    FillScreen(WHITE)
  End;

  (* Stringify the number with left padding & write it *)
  Str(Num, NumTxt);
  If Num < 10 Then
    NumTxt := Concat(' ', NumTxt);

  WriteXY(X+2, Y+4, NumTxt);

  (* Reset graphic defaults *)
  ViewPort(0, 279, 0, 191);
  CharType(CHARNORMAL)
END; (* WriteGridNum *)


(*
 * Dollars
 * Returns a string of the form '$123.45'
 *)
PROCEDURE Dollars(Amt : Real;
                  VAR AmtTxt : String);
VAR
    Whole,    Cents     : Integer;
    WholeTxt, CentsTxt  : String;

BEGIN
  Whole := Trunc(Amt);
  Cents := Trunc(100 * (Amt - Whole));
  Str(Whole, WholeTxt);
  Str(Cents, CentsTxt);
  AmtTxt := Concat('$',WholeTxt,'.',CentsTxt)
END; (* Dollars *)


(*
 * GETSPOTS
 * Get the player's 8 spots from him
 *)
PROCEDURE GetSpots;
VAR
  Cnt     : 0..NUMPLAYSPOTS;    (* Number of spots player has chosen so far *)
  Digit   : Char;               (* Digits player enters when chosing spot *)
  Spot    : Integer;            (* Number just chosen *)
  SpotTxt : String;
BEGIN
  Cnt := 0;
  Matches := 0;
  PlaySpots := [];
  While Cnt < NUMPLAYSPOTS Do
  Begin
    Spot := 0;
    Status(2, 'Your spot: ');
    Status(4, '');              (* Clear previous error message *)
    Repeat
      Read(KEYBOARD, Digit);
      If Digit IN ['0'..'9'] Then
      Begin
        (* Move ones digit to tens & use input as new ones digit *)
        Spot := 10 * (Spot MOD 10) + Ord(Digit) - Ord('0');
        WChar(Digit);
      End
    Until EOLN(KEYBOARD);

    If (Spot < 1) OR (Spot > TOTALSPOTS) Then
      Status(4, 'Illegal spot number')
    Else
      If Spot IN PlaySpots Then
      Begin
        Str(Spot, SpotTxt);
        Status(4, Concat('You have already chosen spot ',SpotTxt));
      End
      Else
      Begin
        WriteGridNum(Spot, HLPLAYER);
        Cnt := Cnt + 1;
        PlaySpots := PlaySpots + [Spot]
      End
  End
END; (* GetSpots *)


(*
 * COMPUTER
 * Have the computer pick its spots
 *)
PROCEDURE Computer;
VAR
  Cnt  : 0..NUMCOMPSPOTS;      (* Number the computer has chosen so far *)
  Spot : 0..TOTALSPOTS;
  
BEGIN
  Cnt := 0;
  CompSpots := [];
  Status(2, 'The computer chooses ');
  While Cnt < NUMCOMPSPOTS Do
  Begin
    Spot := 1 + (Random MOD TOTALSPOTS);
    If NOT (Spot IN CompSpots) Then
    Begin
      (* Not a dup; record this spot for the computer *)
      CompSpots := CompSpots + [Spot];
      Cnt := Cnt + 1;
      WriteGridNum(Spot, HLCOMPUTER)
    End
  End;
END; (* Computer *)


(*
 * FINDMATCHES
 * Display results, indicating where the player matches the computer
 *)
PROCEDURE FindMatches;
VAR
  Spot : 0..TOTALSPOTS;

BEGIN
  (* Print out the computer's spots in order *)
  Spot := 0;
  While Spot < TOTALSPOTS Do
  Begin
    Spot := Spot + 1;
    (* Did the computer choose this spot? *)
    If Spot in CompSpots Then
      (* Did the player match it? *)
      If (Spot IN PlaySpots) Then
      Begin
        Matches := Matches + 1;
        WriteGridNum(Spot, HLMATCH)
      End;

    (* Do a line break every 10 spots *)
    If (Spot MOD 10) = 0 Then
      WriteLn;
  End;
  WriteLn
END; (* FindMatches *)


(*
 * SCORE
 * Find out how much (if anything) the player has won
 *)
PROCEDURE Score;
VAR
  MatchesTxt : String;
  AmountTxt  : String;
BEGIN
  Money := Money - COST;
  Str(Matches, MatchesTxt);

  If Matches >= MIN_MATCHES Then
  Begin
    Dollars(PayOffs[Matches], AmountTxt);
    Status(2, Concat('You lucky person, you have ',MatchesTxt,' matches.'));
    Status(3, Concat('That means you have made ',AmountTxt,'.'));
    Money := Money + PayOffs[Matches]
  End
  Else If Matches >= 1 Then
    Status(2, Concat('Sorry, but you only matched ',MatchesTxt,'.'))
  Else
    Status(2, 'Sorry. You did''t match any!');

  If Money >= 0.00 Then
  Begin
    Dollars(Money, AmountTxt);
    Status(4, Concat('Your total money is ',AmountTxt))
  End
  Else
  Begin
    Dollars(-Money, AmountTxt);
    Status(4, Concat('So far you have lost ',AmountTxt))
  End
END; (* Score *)


(*
 * MAIN
 *)
BEGIN
  Initialize;
  While (Ch <> 'N') AND (ch <>  'n') Do
  Begin
    InitGrid;
    Status(1, 'Welcome to the Keno Lounge');
    GetSpots;
    Computer;
    FindMatches;
    Score;
    Status(5, 'Want to play again? ');
    Read(KEYBOARD, Ch)
  End;

  (* Say goodbye... *)
  TextMode;
  WriteLn;
  WriteLn('All right then leave, see if I care!!!');
  If (Money >= 0) Then
    WriteLn('You made $',Money:5:2)
  Else
    WriteLn('You lost $',-Money:5:2)
END. (* Keno: 5-jul-1981 D.H.; 4-oct-2024 d**3 *)
